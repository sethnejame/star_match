{"version":3,"sources":["App.js","index.js"],"names":["StarDisplay","props","react_default","a","createElement","Fragment","utils","range","count","map","starId","key","className","PlayNumber","style","backgroundColor","colors","status","onClick","number","PlayAgain","color","gameStatus","Game","_useGameState","_React$useState","React","useState","random","_React$useState2","Object","slicedToArray","stars","setStars","_React$useState3","_React$useState4","availableNums","setAvailableNums","_React$useState5","_React$useState6","candidateNums","setCandidateNums","_React$useState7","_React$useState8","secondsLeft","setSecondsLeft","useEffect","length","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","sum","newAvailableNums","filter","n","includes","randomSumIn","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currentStatus","concat","cn","App_PlayAgain","startNewGame","App_StarDisplay","App_PlayNumber","StarMatch","_React$useState9","_React$useState10","gameId","setGameId","App_Game","available","used","wrong","candidate","arr","reduce","acc","curr","min","max","Array","from","_","i","Math","floor","sets","sums","j","len","candidateSet","candidateSum","push","App","this","title","App_StarMatch","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eb6da86a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst StarDisplay = props => (\n  <>\n    {utils.range(1, props.count).map(starId => \n      <div key={starId} className=\"star\" />\n    )}\n  </>\n)\n\nconst PlayNumber = props => (\n  <button \n  className=\"number\"\n  style={{ backgroundColor: colors[props.status] }}\n  onClick={() => props.onClick(props.number, props.status)}\n  >\n    {props.number}\n  </button>\n)\n\nconst PlayAgain = props => (\n  <div className=\"game-done\">\n    <div \n    className=\"message\"\n    style={{ color: props.gameStatus === \"lost\" ? 'red' : 'green' \n    }}>\n      {props.gameStatus === 'lost' ? 'Game Over' : 'You won! Great job.'}\n    </div>\n    <button onClick={props.onClick}>Play Again!</button>\n  </div>\n);\n\nconst useGameState = () => {\n  const [stars, setStars] = React.useState(utils.random(1, 9));\n  const [availableNums, setAvailableNums] = React.useState(utils.range(1, 9));\n  const [candidateNums, setCandidateNums] = React.useState([]);\n  const [secondsLeft, setSecondsLeft] = React.useState(10);\n\n  React.useEffect(() => {\n    if (secondsLeft > 0 && availableNums.length > 0) {\n      const timerId = setTimeout(() => {\n        setSecondsLeft(secondsLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  });\n\n  const setGameState = (newCandidateNums) => {\n    if (utils.sum(newCandidateNums) !== stars) {\n      setCandidateNums(newCandidateNums);\n    } else {\n      const newAvailableNums = availableNums.filter(\n        n => !newCandidateNums.includes(n)\n      );\n      setStars(utils.randomSumIn(newAvailableNums, 9));\n      setAvailableNums(newAvailableNums);\n      setCandidateNums([]);\n    }\n  }\n  return { stars, availableNums, candidateNums, secondsLeft, setGameState };\n}\n\nconst Game = (props) => {\n  const {\n    stars,\n    availableNums,\n    candidateNums,\n    secondsLeft,\n    setGameState\n  } = useGameState();\n\n  const candidatesAreWrong = utils.sum(candidateNums) > stars;\n  const gameStatus = availableNums.length === 0\n    ? 'won'\n    : secondsLeft === 0 ? 'lost' : 'active'\n\n  const numberStatus = (number) => {\n    if (!availableNums.includes(number)) {\n      return 'used';\n    }\n    if (candidateNums.includes(number)) {\n      return candidatesAreWrong ? 'wrong': 'candidate';\n    }\n    return 'available';\n  };\n\n  const onNumberClick = (number, currentStatus) => {\n    if (gameStatus !== 'active' || currentStatus === 'used') {\n      return;\n    }\n    const newCandidateNums = \n      currentStatus === \"available\"\n        ? candidateNums.concat(number)\n        : candidateNums.filter(cn => cn !== number);\n    \n    candidateNums.concat(number);\n\n  setGameState(newCandidateNums);\n    \n  };\n  \n  return (\n    <div className=\"game\">\n      <div className=\"help\">\n        Pick 1 or more numbers that sum to the number of stars\n      </div>\n      <div className=\"body\">\n        <div className=\"left\">\n          {gameStatus !== \"active\" ? (\n            <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\n          ) : (\n            <StarDisplay count={stars} />\n          )}\n        </div>\n        <div className=\"right\">\n          {utils.range(1, 9).map(number =>\n            <PlayNumber \n              key={number} \n              number={number}\n              status={numberStatus(number)}\n              onClick={onNumberClick}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\n    </div>\n  );\n};\n\nconst StarMatch = () => {\n  const [gameId, setGameId] = React.useState(1);\n  return <Game key={gameId} startNewGame={() => setGameId(gameId +1)} />;\n}\n\n// Color Theme\nconst colors = {\n  available: 'lightgray',\n  used: 'lightgreen',\n  wrong: 'lightcoral',\n  candidate: 'deepskyblue',\n};\n\n// Math science\nconst utils = {\n  // Sum an array\n  sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\n\n  // create an array of numbers between min and max (edges included)\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\n\n  // pick a random number between min and max (edges included)\n  random: (min, max) => min + Math.floor(max * Math.random()),\n\n  // Given an array of numbers and a max...\n  // Pick a random sum (< max) from the set of all available sums in arr\n  randomSumIn: (arr, max) => {\n    const sets = [[]];\n    const sums = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0, len = sets.length; j < len; j++) {\n        const candidateSet = sets[j].concat(arr[i]);\n        const candidateSum = utils.sum(candidateSet);\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n    return sums[utils.random(0, sums.length)];\n  },\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.props.title}\n        </div>\n        <StarMatch />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App title=\"Star Match Game!\" />, document.getElementById('root'));\n"],"sourceRoot":""}